0000000000000000000000000000000000000000 f140dcf36b04e2f652a6ee388d83f3059a69f52d vurma <erik.kallman@gmail.com> 1422956001 +0100	commit (initial): initial command line interface completed. moving on to improve the input parsing function.
f140dcf36b04e2f652a6ee388d83f3059a69f52d f140dcf36b04e2f652a6ee388d83f3059a69f52d vurma <erik.kallman@gmail.com> 1422970848 +0100	checkout: moving from master to exp1
f140dcf36b04e2f652a6ee388d83f3059a69f52d b0fd43a9242a4a38e1a5d3d41171183c1a422d2d vurma <erik.kallman@gmail.com> 1422970869 +0100	commit: experimental input reading implementation based on substring comparison
b0fd43a9242a4a38e1a5d3d41171183c1a422d2d b20a290632e95c936a466bb918de4f51beabd17d vurma <erik.kallman@gmail.com> 1422980520 +0100	commit: the string lookup functionality is ready for debugging
b20a290632e95c936a466bb918de4f51beabd17d de4e7872caec638318c6777c912a4793a2c2d162 vurma <erik.kallman@gmail.com> 1422980548 +0100	commit: the string lookup functionality is ready for debugging
de4e7872caec638318c6777c912a4793a2c2d162 7dd824a6ecab60b8ecff8e19fdc228b893c00daf vurma <erik.kallman@gmail.com> 1423052287 +0100	commit: vurma: parse_input now detects the storage space needed for the input data, based on string matching. moving on to implementing data extraction and storage.
7dd824a6ecab60b8ecff8e19fdc228b893c00daf dc6f515385afd860ca4cca995f7a9142ea2c0b8f vurma <erik.kallman@gmail.com> 1423158601 +0100	commit: vurma: added some more functionality that needs debugging: the get_numinstr function doesnt seem to be reading the right values from the example input data in test.log. check printed debug messages for more info.
dc6f515385afd860ca4cca995f7a9142ea2c0b8f ce696bffcfff6a6b5bb96313bd02870b6d2e3880 vurma <erik.kallman@gmail.com> 1423492480 +0100	commit: vurma: the program now capable of extracting energy eigenvalues and idexes. testing should be focused on testing other idexes.
ce696bffcfff6a6b5bb96313bd02870b6d2e3880 f9efe169bd36a7220f0dae3eee7e628c81711e5e vurma <erik.kallman@gmail.com> 1423570211 +0100	commit: vurma: rmap now extracts both energy eigenvalues and transition moments from molcas. buffer overflows are seen where transitions intensities are in the order of 10^-10
f9efe169bd36a7220f0dae3eee7e628c81711e5e b270bd0f58b8b0df8db00a1eb15528c885bb218a vurma <erik.kallman@gmail.com> 1423570774 +0100	commit: vurma: commented out some verbose output functionality. this could be made a feature, by including a verbose output mode.
b270bd0f58b8b0df8db00a1eb15528c885bb218a 0c9886170becf2ef564c9e68dc7413cf5f4934d4 vurma <erik.kallman@gmail.com> 1423745849 +0100	commit: vurma: changing data types to long double instead so that i might be able to handle the really, really small numbers (10^-12)
0c9886170becf2ef564c9e68dc7413cf5f4934d4 d06919735516d30b65f6bb389b955a6712e5548d vurma <erik.kallman@gmail.com> 1423756438 +0100	commit: vurma: through rigorous error printing, i found out that a temporary buffer that was too short was causing the error for the eigenvalue extraction. proceeding to debug the transition moment extraction loop
d06919735516d30b65f6bb389b955a6712e5548d 96db2916dd49ddd226666ce53dd5c75e53f7c950 vurma <erik.kallman@gmail.com> 1423757550 +0100	commit: vurma: cleaning up old verbose debug printing code that is no longer needed. Both loops are now debugged and perform without errors reported in Valgrind.
96db2916dd49ddd226666ce53dd5c75e53f7c950 fa8e7a10a424f78cdd8d567114173981e342d6dc vurma <erik.kallman@gmail.com> 1423825218 +0100	commit: vurma:rudimentary implementation of the parse_input_molcas function now done. merging to master.
fa8e7a10a424f78cdd8d567114173981e342d6dc f140dcf36b04e2f652a6ee388d83f3059a69f52d vurma <erik.kallman@gmail.com> 1423825388 +0100	checkout: moving from exp1 to master
f140dcf36b04e2f652a6ee388d83f3059a69f52d fa8e7a10a424f78cdd8d567114173981e342d6dc vurma <erik.kallman@gmail.com> 1423825399 +0100	merge exp1: Fast-forward
fa8e7a10a424f78cdd8d567114173981e342d6dc fa8e7a10a424f78cdd8d567114173981e342d6dc vurma <erik.kallman@gmail.com> 1424099185 +0100	checkout: moving from master to sort_function
fa8e7a10a424f78cdd8d567114173981e342d6dc 35b214f7f86d9f1da96dfa53ea41661a490e397b vurma <erik.kallman@gmail.com> 1424170062 +0100	commit: vurma: sort_states now correctly extracts the right initial state indices depending on them being within a certain value of the boltzmann weight. Proceeding with adding functionality to screen for intermediate states.
35b214f7f86d9f1da96dfa53ea41661a490e397b 35b214f7f86d9f1da96dfa53ea41661a490e397b vurma <erik.kallman@gmail.com> 1424185611 +0100	checkout: moving from sort_function to ll_data
35b214f7f86d9f1da96dfa53ea41661a490e397b 70eaa686a57dc7e84441b0adfb6f286dc3143622 vurma <erik.kallman@gmail.com> 1424185719 +0100	commit: vurma: to make the sorting function prettier and more effective, i will implement linked-list conversion of the parsed input data. this will facilitate more readable search algorithms and more effective data storage.
70eaa686a57dc7e84441b0adfb6f286dc3143622 b03435ee94bd9349f739875c7eb5191fa2417823 vurma <erik.kallman@gmail.com> 1424190417 +0100	commit: vurma: preliminary skeleton for the linked-list implementation in place. proceeding with writing the get_state_ll function, which will construct the linked list from data in parsed_input.
b03435ee94bd9349f739875c7eb5191fa2417823 1614901961d00b045f4fb5e7e845026d0acdda7d vurma <erik.kallman@gmail.com> 1424266698 +0100	commit: vurma: restructuring the code base into a more modular format.
1614901961d00b045f4fb5e7e845026d0acdda7d c6b612112863e69d8480459fe55b456b9051e453 vurma <erik.kallman@gmail.com> 1424444349 +0100	commit: vurma: there is a bug in the get_numinstr function that i cant identify. if the num_buf array is set to static, i read the eigenvalues correctly from the input file, but not the transition data. If its not defined as static, the opposite situation occurs. Since i cant explain it, i am altering the function to find a way around using that array for extracting the number.
c6b612112863e69d8480459fe55b456b9051e453 ff6d5701877844b74daf5b36f9542b4571eb7c81 vurma <erik.kallman@gmail.com> 1424683850 +0100	commit: vurma: the modified get_numsl function now reads the correct eigenvalues. debugging the transition moment section
ff6d5701877844b74daf5b36f9542b4571eb7c81 189571ed75e1f0aa52e4a1c17238ca5575dbf8c2 vurma <erik.kallman@gmail.com> 1424713395 +0100	commit: vurma:the the init_state_ll allocation now proceeds without error. moving on to debugging the data source error where the wrong transition moments are read.
189571ed75e1f0aa52e4a1c17238ca5575dbf8c2 f1a908c96bde6d70fdf2a6d6bc14a143f8de2279 vurma <erik.kallman@gmail.com> 1424873579 +0100	commit: vurma: the extraction of data and initialization of the data tree now seems to work. im leaving some debug printing in the code in case the next implementation back-fires.
f1a908c96bde6d70fdf2a6d6bc14a143f8de2279 78a22b5bab41d1f88be0ab7471db6a328114039b vurma <erik.kallman@gmail.com> 1424877620 +0100	commit: vurma: cleaned up some variable declarations. now reducing the scope of n_states and n_trans and storing those variables inside the info_node llist.
78a22b5bab41d1f88be0ab7471db6a328114039b 82c13c7d7c0b389259d60e029126a1fe542dc0a1 vurma <erik.kallman@gmail.com> 1424886675 +0100	commit: vurma: n_states and n_trans variables now localized to each info node respectively. the initialization of the state llist was moved outside of the scope of the parse_input function to make the code more readable and the format-specific input parsing functions easier to write. proceeding with implementing a dummy screening function and the Kramers-Heisenberg calculation.
82c13c7d7c0b389259d60e029126a1fe542dc0a1 8ee8ccd649e74698ff3040e303949b284e7cfaba vurma <erik.kallman@gmail.com> 1424886686 +0100	commit: vurma: n_states and n_trans variables now localized to each info node respectively. the initialization of the state llist was moved outside of the scope of the parse_input function to make the code more readable and the format-specific input parsing functions easier to write. proceeding with implementing a dummy screening function and the Kramers-Heisenberg calculation.
8ee8ccd649e74698ff3040e303949b284e7cfaba d3535b0c1a981772163ac73393f49ba0172d9ddf vurma <erik.kallman@gmail.com> 1425287007 +0100	commit: vurma: the k_means algorithm is now functional, but the print statements are still in the code for debugging. moving on to implementing a state selection algorithm that uses the grouped indices from the k_means algorithm along with the fact that there are no inter-group transitions, to obtain a final grouping of states.
d3535b0c1a981772163ac73393f49ba0172d9ddf 1d29e79c1896132001a4e9b4a2430d576bbb99fe vurma <erik.kallman@gmail.com> 1425305758 +0100	commit: vurma: the set_state_ll algorithm now correctly sorts out the ground and intermediate states. moving on to expanding on the j index to also let it set the final state types.
1d29e79c1896132001a4e9b4a2430d576bbb99fe 92acfeb03abe24e18dccbc2b60d692a7797fd9d3 vurma <erik.kallman@gmail.com> 1425312018 +0100	commit: vurma: the sorting algorithm now functions for all state types. test drive this with other input files to validate the algorithm.
92acfeb03abe24e18dccbc2b60d692a7797fd9d3 029503889c04dc249cf57254f74c659dfc7519e8 vurma <erik.kallman@gmail.com> 1425387022 +0100	commit: vurma: the k_means algorithm is now functional and the program runs through valgrind without any invalid writes or reads. proceeding with merging with master and then implementing the screening function.
029503889c04dc249cf57254f74c659dfc7519e8 fa8e7a10a424f78cdd8d567114173981e342d6dc vurma <erik.kallman@gmail.com> 1425387061 +0100	checkout: moving from ll_data to master
fa8e7a10a424f78cdd8d567114173981e342d6dc 029503889c04dc249cf57254f74c659dfc7519e8 vurma <erik.kallman@gmail.com> 1425387096 +0100	checkout: moving from master to ll_data
029503889c04dc249cf57254f74c659dfc7519e8 fa8e7a10a424f78cdd8d567114173981e342d6dc vurma <erik.kallman@gmail.com> 1425387177 +0100	checkout: moving from ll_data to master
fa8e7a10a424f78cdd8d567114173981e342d6dc 029503889c04dc249cf57254f74c659dfc7519e8 vurma <erik.kallman@gmail.com> 1425387239 +0100	merge ll_data: Fast-forward
029503889c04dc249cf57254f74c659dfc7519e8 029503889c04dc249cf57254f74c659dfc7519e8 vurma <erik.kallman@gmail.com> 1425388001 +0100	checkout: moving from master to state_screening
029503889c04dc249cf57254f74c659dfc7519e8 3918475e6fc112f1c0112fc74375f02fee289302 vurma <erik.kallman@gmail.com> 1425495430 +0100	commit: vurma: testing some variable reassignments inside of screen_states in order to resolve a segmentation fault.
3918475e6fc112f1c0112fc74375f02fee289302 db08d68627321f505011c10ecc3304d47975b2a6 vurma <erik.kallman@gmail.com> 1425495447 +0100	commit: vurma: testing some variable reassignments inside of screen_states in order to resolve a segmentation fault.
db08d68627321f505011c10ecc3304d47975b2a6 6a77a08c878b114462ef86a14a0d4bc86fc05b1d vurma <erik.kallman@gmail.com> 1425553213 +0100	commit: vurma rewriting the mdda initialization function.
6a77a08c878b114462ef86a14a0d4bc86fc05b1d a07361d2f9c58fdac261286136bd6b1d38d15627 vurma <erik.kallman@gmail.com> 1425555789 +0100	commit: vurma: the dynamic array implementation is now semi-functional. only the integer arrays contained in each node is dynamic, while the llist of columns is simply allocated a large, static size. moving on applying those data structures to the screen_states algorithm in order to get the right data.
a07361d2f9c58fdac261286136bd6b1d38d15627 11050a51875beee5448284c3b72079a569636ad9 vurma <erik.kallman@gmail.com> 1425628502 +0100	commit: vurma: the screening now extracts the right indices. moving on to implementation of the reduce_output function.
11050a51875beee5448284c3b72079a569636ad9 86870e8a404fae048c8ac05e9b500e3b98471a72 vurma <erik.kallman@gmail.com> 1425915410 +0100	commit: vurma:implementing deltae matrix in smap.c
86870e8a404fae048c8ac05e9b500e3b98471a72 7035fed3e5835127e74b24f6fc12c73e4a3fc661 vurma <erik.kallman@gmail.com> 1425991250 +0100	commit: vurma:the screening algorithm, a rudimentary implementation of the KH formula, as well as the screened data extraction is now functional. Moving on to solve the problem of the inital states not being added as to states for all initial states.
7035fed3e5835127e74b24f6fc12c73e4a3fc661 5ba16e34c671fc7b767067955b66708d44c4c98d vurma <erik.kallman@gmail.com> 1426091350 +0100	commit: vurma: att the current stage, rmap, used along withe the plotfigs.nu script for plotting the transition, prints the expected results for the 1s-3d transition for Fe2+. Before testing the program on additional systems and adapting the clustering algorithm according to the testing results.
5ba16e34c671fc7b767067955b66708d44c4c98d 7035fed3e5835127e74b24f6fc12c73e4a3fc661 vurma <erik.kallman@gmail.com> 1426091733 +0100	checkout: moving from state_screening to 7035fed
7035fed3e5835127e74b24f6fc12c73e4a3fc661 e30c142906b991ff201e37ce53e23051c78f4dba vurma <erik.kallman@gmail.com> 1426091888 +0100	checkout: moving from 7035fed3e5835127e74b24f6fc12c73e4a3fc661 to e30c
e30c142906b991ff201e37ce53e23051c78f4dba 5ba16e34c671fc7b767067955b66708d44c4c98d vurma <erik.kallman@gmail.com> 1426091924 +0100	checkout: moving from e30c142906b991ff201e37ce53e23051c78f4dba to 5ba1
5ba16e34c671fc7b767067955b66708d44c4c98d e3fc86df46f7a09d345b09438691083d57e52ee1 vurma <erik.kallman@gmail.com> 1426162220 +0100	commit: vurma: adding user input threshold functionality by grabbing some stuff from stash
e3fc86df46f7a09d345b09438691083d57e52ee1 7035fed3e5835127e74b24f6fc12c73e4a3fc661 vurma <erik.kallman@gmail.com> 1426162241 +0100	checkout: moving from e3fc86df46f7a09d345b09438691083d57e52ee1 to 7035
7035fed3e5835127e74b24f6fc12c73e4a3fc661 e30c142906b991ff201e37ce53e23051c78f4dba vurma <erik.kallman@gmail.com> 1426162319 +0100	checkout: moving from 7035fed3e5835127e74b24f6fc12c73e4a3fc661 to e30c
e30c142906b991ff201e37ce53e23051c78f4dba 5ba16e34c671fc7b767067955b66708d44c4c98d vurma <erik.kallman@gmail.com> 1426162363 +0100	checkout: moving from e30c142906b991ff201e37ce53e23051c78f4dba to 5ba1
5ba16e34c671fc7b767067955b66708d44c4c98d e3fc86df46f7a09d345b09438691083d57e52ee1 vurma <erik.kallman@gmail.com> 1426162438 +0100	checkout: moving from 5ba16e34c671fc7b767067955b66708d44c4c98d to e3fc
e3fc86df46f7a09d345b09438691083d57e52ee1 accf1a18ee52b584994820eb6ba807be15a67d7a vurma <erik.kallman@gmail.com> 1426176435 +0100	commit: vurma: debugged the extended CLI functionality.
accf1a18ee52b584994820eb6ba807be15a67d7a 17edb529e00cc9b16eaa867a6256c648e4c60260 vurma <erik.kallman@gmail.com> 1426497388 +0100	commit: vurma: rewriting the sorting algorithm so that only intermediate states are separated from the ground and final.
17edb529e00cc9b16eaa867a6256c648e4c60260 029503889c04dc249cf57254f74c659dfc7519e8 vurma <erik.kallman@gmail.com> 1426497466 +0100	checkout: moving from 17edb529e00cc9b16eaa867a6256c648e4c60260 to 0295
029503889c04dc249cf57254f74c659dfc7519e8 5ba16e34c671fc7b767067955b66708d44c4c98d vurma <erik.kallman@gmail.com> 1426497519 +0100	checkout: moving from 029503889c04dc249cf57254f74c659dfc7519e8 to 5ba1
5ba16e34c671fc7b767067955b66708d44c4c98d 17edb529e00cc9b16eaa867a6256c648e4c60260 vurma <erik.kallman@gmail.com> 1426497795 +0100	checkout: moving from 5ba16e34c671fc7b767067955b66708d44c4c98d to 17edb
17edb529e00cc9b16eaa867a6256c648e4c60260 65cac331e826a46ff267f1e80b47cc23cd84dcc1 vurma <erik.kallman@gmail.com> 1426497804 +0100	checkout: moving from 17edb529e00cc9b16eaa867a6256c648e4c60260 to 65cac
65cac331e826a46ff267f1e80b47cc23cd84dcc1 24f767b84864c95ff37600592602b7099a327713 vurma <erik.kallman@gmail.com> 1426497813 +0100	checkout: moving from 65cac331e826a46ff267f1e80b47cc23cd84dcc1 to 24f76
24f767b84864c95ff37600592602b7099a327713 17edb529e00cc9b16eaa867a6256c648e4c60260 vurma <erik.kallman@gmail.com> 1426497879 +0100	checkout: moving from 24f767b84864c95ff37600592602b7099a327713 to 17edb
17edb529e00cc9b16eaa867a6256c648e4c60260 029503889c04dc249cf57254f74c659dfc7519e8 vurma <erik.kallman@gmail.com> 1426499201 +0100	checkout: moving from 17edb529e00cc9b16eaa867a6256c648e4c60260 to 0295
029503889c04dc249cf57254f74c659dfc7519e8 17edb529e00cc9b16eaa867a6256c648e4c60260 vurma <erik.kallman@gmail.com> 1426499277 +0100	merge 17edb: Fast-forward
17edb529e00cc9b16eaa867a6256c648e4c60260 029503889c04dc249cf57254f74c659dfc7519e8 vurma <erik.kallman@gmail.com> 1426499335 +0100	checkout: moving from 17edb529e00cc9b16eaa867a6256c648e4c60260 to 0295
029503889c04dc249cf57254f74c659dfc7519e8 17edb529e00cc9b16eaa867a6256c648e4c60260 vurma <erik.kallman@gmail.com> 1426499364 +0100	checkout: moving from 029503889c04dc249cf57254f74c659dfc7519e8 to 17edb
17edb529e00cc9b16eaa867a6256c648e4c60260 17edb529e00cc9b16eaa867a6256c648e4c60260 vurma <erik.kallman@gmail.com> 1426499442 +0100	checkout: moving from 17edb529e00cc9b16eaa867a6256c648e4c60260 to k_means_rewrite
17edb529e00cc9b16eaa867a6256c648e4c60260 46a5da08b29f4e111e9793e82d681e70377f4460 vurma <erik.kallman@gmail.com> 1426512742 +0100	commit: vurma: testing a k_means algorithm depending on relative energies, which should provide the same result as one with absolute energies.
46a5da08b29f4e111e9793e82d681e70377f4460 17edb529e00cc9b16eaa867a6256c648e4c60260 vurma <erik.kallman@gmail.com> 1426512758 +0100	checkout: moving from k_means_rewrite to 17edb
17edb529e00cc9b16eaa867a6256c648e4c60260 46a5da08b29f4e111e9793e82d681e70377f4460 vurma <erik.kallman@gmail.com> 1426512788 +0100	checkout: moving from 17edb529e00cc9b16eaa867a6256c648e4c60260 to 46a5
46a5da08b29f4e111e9793e82d681e70377f4460 462c757ce1a9e07662116450f4a42ca75ed485e8 vurma <erik.kallman@gmail.com> 1426513954 +0100	commit: vurma: which it didnt.
462c757ce1a9e07662116450f4a42ca75ed485e8 4cd4de2bcb1d0e7260b38c3aa4012f2bb61e1970 vurma <erik.kallman@gmail.com> 1426523170 +0100	commit: vurma: the current version segfaults due to invalide memory writing operations that i have not yet traced the source of.
4cd4de2bcb1d0e7260b38c3aa4012f2bb61e1970 4cd4de2bcb1d0e7260b38c3aa4012f2bb61e1970 vurma <erik.kallman@gmail.com> 1426523250 +0100	checkout: moving from 4cd4de2bcb1d0e7260b38c3aa4012f2bb61e1970 to bugpatching
4cd4de2bcb1d0e7260b38c3aa4012f2bb61e1970 462c757ce1a9e07662116450f4a42ca75ed485e8 vurma <erik.kallman@gmail.com> 1426523312 +0100	checkout: moving from bugpatching to 462c
462c757ce1a9e07662116450f4a42ca75ed485e8 462c757ce1a9e07662116450f4a42ca75ed485e8 vurma <erik.kallman@gmail.com> 1426599746 +0100	checkout: moving from 462c757ce1a9e07662116450f4a42ca75ed485e8 to k_means_segfix
462c757ce1a9e07662116450f4a42ca75ed485e8 c39f225dde02c225b963271109b712d765c78f43 vurma <erik.kallman@gmail.com> 1426599829 +0100	commit: vurma: the segfault is now fixed, and a new version of the atof function taking scientific notation of numbers was written. moving on to cleaning up the code and testing the implementation on the test/ datasets.
c39f225dde02c225b963271109b712d765c78f43 0e91117c2165b30229d10bb97fe7812728c0aa20 vurma <erik.kallman@gmail.com> 1426607552 +0100	commit: vurma: the current state of the program correctly processes the Fe1s->3d input file, but segfaults on others. I will now proceed with tracing that segmentation fault with valgrind.
0e91117c2165b30229d10bb97fe7812728c0aa20 7d8de839be24c960a8971bdb70c1686138a274a2 vurma <erik.kallman@gmail.com> 1426674247 +0100	commit: vurma: adding some changes to the init_state_ll function that might be causing trouble.
7d8de839be24c960a8971bdb70c1686138a274a2 2bd1215bcb5e4257432f2f57fb0be64c27f96edc vurma <erik.kallman@gmail.com> 1426694912 +0100	commit: vurma: the segfault bug is fixed, but the program is still not tested on systems other than the Fe2+ 1s->3d input file. also, the implementation is somewhat hacky and could be done more efficiently.
2bd1215bcb5e4257432f2f57fb0be64c27f96edc 9d2002eb188bd451bc03c969941c22aae7cd6650 vurma <erik.kallman@gmail.com> 1426751661 +0100	commit: vurma: the program now runs without undefined behaviour for the Fe2+ 1s->3d system. proceeding with testing for other systems.
9d2002eb188bd451bc03c969941c22aae7cd6650 3371d08dd32058033aa034d37a8b0f0690fe3458 vurma <erik.kallman@gmail.com> 1426866395 +0100	commit: vurma: the Fe1s3d_ein.log file is now correctly processed. Moving on to checking compatibility with the Fe2p3d_1467.log file.
3371d08dd32058033aa034d37a8b0f0690fe3458 e5e62f90a598e053fd32171bdee068d8ea16f884 vurma <erik.kallman@gmail.com> 1427145023 +0100	commit: vurma: replaced the standard strchr function with charinstr since it was, for some reason, malfunctioning. this was the reason for the error in the data reading. proceeding with testing the implementation.
e5e62f90a598e053fd32171bdee068d8ea16f884 65bfecf500d961534159f19fc5cbc230bbb9aff9 vurma <erik.kallman@gmail.com> 1427155735 +0100	commit: vurma: made some final additions to the set_state_ll function in order to extract the final transitions in the list. This code is in need of improvement, but can be considered to the job, albeit in a dirty and inefficient way.
65bfecf500d961534159f19fc5cbc230bbb9aff9 f86e12148c7d60a39739cfbc3de843aaf5e92a4e vurma <erik.kallman@gmail.com> 1427292961 +0100	commit: vurma: adding functionality for including symmetric transitions into the state_ll
f86e12148c7d60a39739cfbc3de843aaf5e92a4e 1bb87fa40e394fb1d244efeef24e409382688cbe vurma <erik.kallman@gmail.com> 1427468269 +0100	commit: vurma: the symmetric transitions are now taken into account for the Fe2p 1s->3d system, with only symmetry 1Ag and with the four other symmetries.
1bb87fa40e394fb1d244efeef24e409382688cbe 029503889c04dc249cf57254f74c659dfc7519e8 vurma <erik.kallman@gmail.com> 1427468676 +0100	checkout: moving from k_means_segfix to 0295038
029503889c04dc249cf57254f74c659dfc7519e8 1bb87fa40e394fb1d244efeef24e409382688cbe vurma <erik.kallman@gmail.com> 1427468696 +0100	checkout: moving from 029503889c04dc249cf57254f74c659dfc7519e8 to 1bb87
1bb87fa40e394fb1d244efeef24e409382688cbe 1bb87fa40e394fb1d244efeef24e409382688cbe vurma <erik.kallman@gmail.com> 1427468848 +0100	checkout: moving from 1bb87fa40e394fb1d244efeef24e409382688cbe to sym_trans
1bb87fa40e394fb1d244efeef24e409382688cbe 029503889c04dc249cf57254f74c659dfc7519e8 vurma <erik.kallman@gmail.com> 1427468873 +0100	checkout: moving from sym_trans to 0295
029503889c04dc249cf57254f74c659dfc7519e8 1bb87fa40e394fb1d244efeef24e409382688cbe vurma <erik.kallman@gmail.com> 1427469086 +0100	checkout: moving from 029503889c04dc249cf57254f74c659dfc7519e8 to 1bb87
1bb87fa40e394fb1d244efeef24e409382688cbe 1bb87fa40e394fb1d244efeef24e409382688cbe vurma <erik.kallman@gmail.com> 1427469177 +0100	checkout: moving from 1bb87fa40e394fb1d244efeef24e409382688cbe to sym_trans
1bb87fa40e394fb1d244efeef24e409382688cbe 029503889c04dc249cf57254f74c659dfc7519e8 vurma <erik.kallman@gmail.com> 1427469183 +0100	checkout: moving from sym_trans to master
029503889c04dc249cf57254f74c659dfc7519e8 1bb87fa40e394fb1d244efeef24e409382688cbe vurma <erik.kallman@gmail.com> 1427469202 +0100	merge 1bb87: Fast-forward
1bb87fa40e394fb1d244efeef24e409382688cbe 1bb87fa40e394fb1d244efeef24e409382688cbe vurma <erik.kallman@gmail.com> 1427480298 +0100	checkout: moving from master to screen_fix
1bb87fa40e394fb1d244efeef24e409382688cbe 5f4862e5b05515283f4b3879847cac905d89fc89 vurma <erik.kallman@gmail.com> 1427480405 +0100	commit: vurma: there is potentially a bug in the screening function that i need to clear. find details and data output examples in the fourth log entry of 2015-03-27.
5f4862e5b05515283f4b3879847cac905d89fc89 5c2f45a8cda141b04014457edd23ba4c13f69a83 vurma <erik.kallman@gmail.com> 1427786485 +0200	commit: vurma:the program now correctly screens and plots both Fe2p systems.
5c2f45a8cda141b04014457edd23ba4c13f69a83 1bb87fa40e394fb1d244efeef24e409382688cbe vurma <erik.kallman@gmail.com> 1427786534 +0200	checkout: moving from screen_fix to master
1bb87fa40e394fb1d244efeef24e409382688cbe 5c2f45a8cda141b04014457edd23ba4c13f69a83 vurma <erik.kallman@gmail.com> 1427786547 +0200	merge 5c2f: Fast-forward
5c2f45a8cda141b04014457edd23ba4c13f69a83 c813a05a6950c1c462241dbe5b14991072956901 vurma <erik.kallman@gmail.com> 1427957813 +0200	commit: vurma: simplifying the writing and reading from the temporary data file. this is causing trouble with input files containing around a houndred states.
c813a05a6950c1c462241dbe5b14991072956901 c813a05a6950c1c462241dbe5b14991072956901 vurma <erik.kallman@gmail.com> 1428504029 +0200	checkout: moving from master to indexing_fix
c813a05a6950c1c462241dbe5b14991072956901 ad0e556faba5c5b7f6e04ca330b450dbf800b056 vurma <erik.kallman@gmail.com> 1428504104 +0200	commit: vurma: all details of the bug this branch is set to fix can be found in the TODO scheduled for 2015-04-08 'For some reason...'
ad0e556faba5c5b7f6e04ca330b450dbf800b056 3c27a71ee1bdc0302f10a177c99b35606e556b98 vurma <erik.kallman@gmail.com> 1429188034 +0200	commit: the indexing problem was fixed, and the correct ground states are now added to the screened data
3c27a71ee1bdc0302f10a177c99b35606e556b98 c813a05a6950c1c462241dbe5b14991072956901 vurma <erik.kallman@gmail.com> 1429188050 +0200	checkout: moving from indexing_fix to master
c813a05a6950c1c462241dbe5b14991072956901 3c27a71ee1bdc0302f10a177c99b35606e556b98 vurma <erik.kallman@gmail.com> 1429188066 +0200	merge 3c27: Fast-forward
3c27a71ee1bdc0302f10a177c99b35606e556b98 90a8464940dfdd8deac341812fdda6d9007ba262 vurma <erik.kallman@gmail.com> 1429608820 +0200	commit: vurma: the program currently plots systems like Fe2+ and Fe3+ at the expected energies, but with the incorrect broadening.
90a8464940dfdd8deac341812fdda6d9007ba262 90a8464940dfdd8deac341812fdda6d9007ba262 vurma <erik.kallman@gmail.com> 1429608846 +0200	checkout: moving from master to exp_broadedning
90a8464940dfdd8deac341812fdda6d9007ba262 3dfde7da5da8eb442da79407f9593b994e6624ac vurma <erik.kallman@gmail.com> 1429608989 +0200	commit: vurma:initial commit of this experimental branch.
3dfde7da5da8eb442da79407f9593b994e6624ac 90a8464940dfdd8deac341812fdda6d9007ba262 vurma <erik.kallman@gmail.com> 1429609856 +0200	checkout: moving from exp_broadedning to master
90a8464940dfdd8deac341812fdda6d9007ba262 90a8464940dfdd8deac341812fdda6d9007ba262 vurma <erik.kallman@gmail.com> 1429609869 +0200	checkout: moving from master to refractoring
90a8464940dfdd8deac341812fdda6d9007ba262 8e1a38044ca1fd46993fd61cf5ed594c45385112 vurma <erik.kallman@gmail.com> 1429624087 +0200	commit: vurma: corrected file and variable names to be more descriptive. moved code from pare_input to estate.c and info_node.c to make the parse_input file less cluttered.
8e1a38044ca1fd46993fd61cf5ed594c45385112 3dfde7da5da8eb442da79407f9593b994e6624ac vurma <erik.kallman@gmail.com> 1429624136 +0200	checkout: moving from refractoring to exp_broadedning
3dfde7da5da8eb442da79407f9593b994e6624ac dfc52b5b947180bce605c02142e6486d3178dd95 vurma <erik.kallman@gmail.com> 1429624154 +0200	merge refractoring: Merge made by the 'recursive' strategy.
dfc52b5b947180bce605c02142e6486d3178dd95 623e24f18664119ba3e7567ae2f6656c068facd8 vurma <erik.kallman@gmail.com> 1429701453 +0200	commit: vurma: the code providing the spectrum functionality is now ready for debugging and testing.
623e24f18664119ba3e7567ae2f6656c068facd8 8e1a38044ca1fd46993fd61cf5ed594c45385112 vurma <erik.kallman@gmail.com> 1429701483 +0200	checkout: moving from exp_broadedning to refractoring
8e1a38044ca1fd46993fd61cf5ed594c45385112 623e24f18664119ba3e7567ae2f6656c068facd8 vurma <erik.kallman@gmail.com> 1429703288 +0200	checkout: moving from refractoring to exp_broadedning
623e24f18664119ba3e7567ae2f6656c068facd8 90a8464940dfdd8deac341812fdda6d9007ba262 vurma <erik.kallman@gmail.com> 1429771466 +0200	checkout: moving from broadening to master
90a8464940dfdd8deac341812fdda6d9007ba262 623e24f18664119ba3e7567ae2f6656c068facd8 vurma <erik.kallman@gmail.com> 1429771669 +0200	checkout: moving from master to broadening
623e24f18664119ba3e7567ae2f6656c068facd8 83e9a5c4421799c924eb4b79fe84399ce5c6909f vurma <erik.kallman@gmail.com> 1429876003 +0200	commit: vurma: added functionality to provide the expected ranges for the different states to be used for grouping, from user input instead. the default grouping algorithm is still k_means.
83e9a5c4421799c924eb4b79fe84399ce5c6909f 25c5d476ef19f7b03c4bf01b280bbf23cb6d8e3c vurma <erik.kallman@gmail.com> 1429886614 +0200	commit: vurma:the input range for the eigenstate energies is now debugged and functional.
25c5d476ef19f7b03c4bf01b280bbf23cb6d8e3c 92cf5b8a266d7965ef0bfe33ea65087a7499b28d vurma <erik.kallman@gmail.com> 1429906148 +0200	commit: merge with spectrum code
92cf5b8a266d7965ef0bfe33ea65087a7499b28d 90a8464940dfdd8deac341812fdda6d9007ba262 vurma <erik.kallman@gmail.com> 1429906683 +0200	checkout: moving from broadening to master
90a8464940dfdd8deac341812fdda6d9007ba262 92cf5b8a266d7965ef0bfe33ea65087a7499b28d vurma <erik.kallman@gmail.com> 1429906691 +0200	merge broadening: Fast-forward
92cf5b8a266d7965ef0bfe33ea65087a7499b28d 8e1a38044ca1fd46993fd61cf5ed594c45385112 vurma <erik.kallman@gmail.com> 1430132824 +0200	checkout: moving from master to refractoring
8e1a38044ca1fd46993fd61cf5ed594c45385112 92cf5b8a266d7965ef0bfe33ea65087a7499b28d vurma <erik.kallman@gmail.com> 1430132893 +0200	checkout: moving from refractoring to broadening
92cf5b8a266d7965ef0bfe33ea65087a7499b28d 8e1a38044ca1fd46993fd61cf5ed594c45385112 vurma <erik.kallman@gmail.com> 1430132982 +0200	checkout: moving from broadening to refractoring
8e1a38044ca1fd46993fd61cf5ed594c45385112 92cf5b8a266d7965ef0bfe33ea65087a7499b28d vurma <erik.kallman@gmail.com> 1430133032 +0200	checkout: moving from refractoring to broadening
92cf5b8a266d7965ef0bfe33ea65087a7499b28d 92cf5b8a266d7965ef0bfe33ea65087a7499b28d vurma <erik.kallman@gmail.com> 1430229484 +0200	checkout: moving from broadening to exp_1s3d2p1s
92cf5b8a266d7965ef0bfe33ea65087a7499b28d 27bcd582f75a5ca3d0e2b531cdbf82ebf7fd98da vurma <erik.kallman@gmail.com> 1430229528 +0200	commit: vurma: initial commit of the branch. implementing functionality to read dipole and quadrupole intensities from one file.
27bcd582f75a5ca3d0e2b531cdbf82ebf7fd98da d93779e0aea3bcfbe3b9583aa49b58018f2f757d vurma <erik.kallman@gmail.com> 1430740940 +0200	commit: vurma: implemented and debugged parse_input_tmp, a function that can be used to read output directly from preparsed output file from molcas.
d93779e0aea3bcfbe3b9583aa49b58018f2f757d 5bb776f9f23e3f06f4bc851f82e629f4471296ec vurma <erik.kallman@gmail.com> 1430847932 +0200	commit: vurma: added some more debugging functionality after finding an error in the screen_states function that resulted in intermediate states with no screened final states to still be in the list of transitions
5bb776f9f23e3f06f4bc851f82e629f4471296ec 5bb776f9f23e3f06f4bc851f82e629f4471296ec vurma <erik.kallman@gmail.com> 1430986165 +0200	checkout: moving from exp_1s3d2p1s to info_node_opt
5bb776f9f23e3f06f4bc851f82e629f4471296ec 4aeaea6a2cf54b86880dbba3599d163585521bdc vurma <erik.kallman@gmail.com> 1431003275 +0200	commit: vurma:implementing a list for the estates in each info node almost decreased the number of executed instructions by half.
4aeaea6a2cf54b86880dbba3599d163585521bdc d2f1ceb97c3df4421639d70db980a066fadbd6dc vurma <erik.kallman@gmail.com> 1431065947 +0200	commit: vurma: added half of the planned optimizations to estate.c
d2f1ceb97c3df4421639d70db980a066fadbd6dc 4aeaea6a2cf54b86880dbba3599d163585521bdc vurma <erik.kallman@gmail.com> 1431079378 +0200	checkout: moving from info_node_opt to 4aea
4aeaea6a2cf54b86880dbba3599d163585521bdc 4aeaea6a2cf54b86880dbba3599d163585521bdc vurma <erik.kallman@gmail.com> 1431080100 +0200	checkout: moving from 4aeaea6a2cf54b86880dbba3599d163585521bdc to get_ediff_opt
4aeaea6a2cf54b86880dbba3599d163585521bdc 519577a73399d8e7eb1f9521050facbf5c31bb0c vurma <erik.kallman@gmail.com> 1431080117 +0200	commit: compare the opts!
519577a73399d8e7eb1f9521050facbf5c31bb0c 4aeaea6a2cf54b86880dbba3599d163585521bdc vurma <erik.kallman@gmail.com> 1431080148 +0200	checkout: moving from get_ediff_opt to 4aea
4aeaea6a2cf54b86880dbba3599d163585521bdc 519577a73399d8e7eb1f9521050facbf5c31bb0c vurma <erik.kallman@gmail.com> 1431080277 +0200	checkout: moving from 4aeaea6a2cf54b86880dbba3599d163585521bdc to get_ediff_opt
519577a73399d8e7eb1f9521050facbf5c31bb0c 6d819882a496ad4d5e7d499c04029a55d1505a64 vurma <erik.kallman@gmail.com> 1431083893 +0200	commit: vurma: final commit of the branch. the get_ediff optimizations have been debugged and tested, providing a ~75% decrease in the number of instructions executed
6d819882a496ad4d5e7d499c04029a55d1505a64 92cf5b8a266d7965ef0bfe33ea65087a7499b28d vurma <erik.kallman@gmail.com> 1431083899 +0200	checkout: moving from get_ediff_opt to master
92cf5b8a266d7965ef0bfe33ea65087a7499b28d 6d819882a496ad4d5e7d499c04029a55d1505a64 vurma <erik.kallman@gmail.com> 1431083927 +0200	merge 6d81988: Fast-forward
6d819882a496ad4d5e7d499c04029a55d1505a64 6d819882a496ad4d5e7d499c04029a55d1505a64 vurma <erik.kallman@gmail.com> 1431084073 +0200	checkout: moving from master to mom_sorting
6d819882a496ad4d5e7d499c04029a55d1505a64 ff950f9a9ead6995c9443407e2b00fc36affa804 vurma <erik.kallman@gmail.com> 1431092013 +0200	checkout: moving from mom_sorting to ff950
ff950f9a9ead6995c9443407e2b00fc36affa804 6d819882a496ad4d5e7d499c04029a55d1505a64 vurma <erik.kallman@gmail.com> 1431092047 +0200	checkout: moving from ff950f9a9ead6995c9443407e2b00fc36affa804 to mom_sorting
6d819882a496ad4d5e7d499c04029a55d1505a64 2eab3c2168b3639e9b3e3e635da037cff69d0a02 vurma <erik.kallman@gmail.com> 1431356550 +0200	commit: vurma:the set_ttype function is now debugged and will work regardless of how many transition moment types that are included.
2eab3c2168b3639e9b3e3e635da037cff69d0a02 d2f1ceb97c3df4421639d70db980a066fadbd6dc vurma <erik.kallman@gmail.com> 1431356671 +0200	checkout: moving from mom_sorting to info_node_opt
d2f1ceb97c3df4421639d70db980a066fadbd6dc 2fc8a6b8251600323bad48631e59b91df7abe93d vurma <erik.kallman@gmail.com> 1431360316 +0200	commit: vurma: it isnt possible to optimize the get_trans function using the set_idxsmap function, this branch can be kept for future reference, but should be considered dead
2fc8a6b8251600323bad48631e59b91df7abe93d 2eab3c2168b3639e9b3e3e635da037cff69d0a02 vurma <erik.kallman@gmail.com> 1431360342 +0200	checkout: moving from info_node_opt to mom_sorting
2eab3c2168b3639e9b3e3e635da037cff69d0a02 6d819882a496ad4d5e7d499c04029a55d1505a64 vurma <erik.kallman@gmail.com> 1431360352 +0200	checkout: moving from mom_sorting to master
6d819882a496ad4d5e7d499c04029a55d1505a64 2eab3c2168b3639e9b3e3e635da037cff69d0a02 vurma <erik.kallman@gmail.com> 1431360468 +0200	merge 2eab3: Fast-forward
2eab3c2168b3639e9b3e3e635da037cff69d0a02 2eab3c2168b3639e9b3e3e635da037cff69d0a02 vurma <erik.kallman@gmail.com> 1431361119 +0200	checkout: moving from master to sort_states_rework
2eab3c2168b3639e9b3e3e635da037cff69d0a02 5d6bc858a21e02f647126221236063baa4533133 vurma <erik.kallman@gmail.com> 1431445255 +0200	commit: vurma:encoutered a bug in the sort_states function that is documented in ~/org/log.org
5d6bc858a21e02f647126221236063baa4533133 088164b41afc0c2c411057cd650eec6c608fe8ea vurma <erik.kallman@gmail.com> 1431460095 +0200	commit: vurma:moving on to letting the sort_states allocate memory and define groups instead.
088164b41afc0c2c411057cd650eec6c608fe8ea 2bb896d98e2ea64a2d6ed0c1d782259202e86c28 vurma <erik.kallman@gmail.com> 1431501440 +0200	commit: vurma: temporarily removed the recursive functionality of the sort_states function, which was causing an error that couldnt be debugged using valgrind.
2bb896d98e2ea64a2d6ed0c1d782259202e86c28 7e699e4d7de28e9067d9d70bb44f6ac28e2f6d0b vurma <erik.kallman@gmail.com> 1431681032 +0200	commit: vurma:sort_states now functioning as expected for both dipole and quadrupole transitions
7e699e4d7de28e9067d9d70bb44f6ac28e2f6d0b 2eab3c2168b3639e9b3e3e635da037cff69d0a02 vurma <erik.kallman@gmail.com> 1431681625 +0200	checkout: moving from sort_states_rework to master
2eab3c2168b3639e9b3e3e635da037cff69d0a02 7e699e4d7de28e9067d9d70bb44f6ac28e2f6d0b vurma <erik.kallman@gmail.com> 1431681637 +0200	merge sort_states_rework: Fast-forward
7e699e4d7de28e9067d9d70bb44f6ac28e2f6d0b 7e699e4d7de28e9067d9d70bb44f6ac28e2f6d0b vurma <erik.kallman@gmail.com> 1431807176 +0200	checkout: moving from master to get_numsl_fix
7e699e4d7de28e9067d9d70bb44f6ac28e2f6d0b a49801b8c01eabc9a3fbf193edbdcf58317e3051 vurma <erik.kallman@gmail.com> 1431807198 +0200	commit: vurma:trying to get rid of the bug contained in get_numsl
a49801b8c01eabc9a3fbf193edbdcf58317e3051 3af5dfa35e4e55959b9602b30b7e6fca4975ba77 vurma <erik.kallman@gmail.com> 1431888576 +0200	commit: vurma: get_numsl now correctly reads all transitions in the 1s3d_2p1s data file. cleaning up the code
3af5dfa35e4e55959b9602b30b7e6fca4975ba77 12345d3848480e5f72f161bb8249ecc4ae203119 vurma <erik.kallman@gmail.com> 1432107850 +0200	commit: vurma: nope
12345d3848480e5f72f161bb8249ecc4ae203119 329020ecabcbc1309611590db26accdc29252f4e vurma <erik.kallman@gmail.com> 1432124527 +0200	commit: vurma: Although the program now correctly, altough GS->GS transitions are still in the list, handles both 1s->3d+2p->1s and 1s->3d data, the current symtrans function needs to be debugged and tested more thouroughly.
329020ecabcbc1309611590db26accdc29252f4e 9c218c90ab19856517c9479a4ee5159cecb294e9 vurma <erik.kallman@gmail.com> 1432200064 +0200	commit: vurma: adding index reading to the eigenvalues so that the sorting of the energies are correct.
9c218c90ab19856517c9479a4ee5159cecb294e9 68dfd6dec3011c238d456eae4665a9efe1378c40 vurma <erik.kallman@gmail.com> 1432213346 +0200	commit: vurma: riddled with bugs. avoid.
68dfd6dec3011c238d456eae4665a9efe1378c40 329020ecabcbc1309611590db26accdc29252f4e vurma <erik.kallman@gmail.com> 1432213430 +0200	checkout: moving from get_numsl_fix to 329020
329020ecabcbc1309611590db26accdc29252f4e 329020ecabcbc1309611590db26accdc29252f4e vurma <erik.kallman@gmail.com> 1432213447 +0200	checkout: moving from 329020ecabcbc1309611590db26accdc29252f4e to new_take
329020ecabcbc1309611590db26accdc29252f4e 68dfd6dec3011c238d456eae4665a9efe1378c40 vurma <erik.kallman@gmail.com> 1432213914 +0200	checkout: moving from new_take to get_numsl_fix
68dfd6dec3011c238d456eae4665a9efe1378c40 049b8f7bd19349b945391111c4974e733a5f3fa8 vurma <erik.kallman@gmail.com> 1432287062 +0200	commit: checking out some old smap implementations.
049b8f7bd19349b945391111c4974e733a5f3fa8 329020ecabcbc1309611590db26accdc29252f4e vurma <erik.kallman@gmail.com> 1432287078 +0200	checkout: moving from get_numsl_fix to new_take
329020ecabcbc1309611590db26accdc29252f4e 7e699e4d7de28e9067d9d70bb44f6ac28e2f6d0b vurma <erik.kallman@gmail.com> 1432287114 +0200	checkout: moving from new_take to sort_states_rework
7e699e4d7de28e9067d9d70bb44f6ac28e2f6d0b 049b8f7bd19349b945391111c4974e733a5f3fa8 vurma <erik.kallman@gmail.com> 1432287141 +0200	checkout: moving from sort_states_rework to get_numsl_fix
049b8f7bd19349b945391111c4974e733a5f3fa8 1650c3d61efbd16d7bf41432532be58b45efe077 vurma <erik.kallman@gmail.com> 1432293145 +0200	commit: temp
1650c3d61efbd16d7bf41432532be58b45efe077 1650c3d61efbd16d7bf41432532be58b45efe077 vurma <erik.kallman@gmail.com> 1432305967 +0200	checkout: moving from get_numsl_fix to miniprogram
1650c3d61efbd16d7bf41432532be58b45efe077 eeff4b856fb2867a8335b7e805de3b67d444ba50 vurma <erik.kallman@gmail.com> 1432306004 +0200	commit: reducing the current implementation in order to simplify the debugging process
eeff4b856fb2867a8335b7e805de3b67d444ba50 11b2ed6ca986f13aee0ec3d35ee8834fa4b9cc4b vurma <erik.kallman@gmail.com> 1432306956 +0200	commit: ni,l
11b2ed6ca986f13aee0ec3d35ee8834fa4b9cc4b 7e699e4d7de28e9067d9d70bb44f6ac28e2f6d0b vurma <erik.kallman@gmail.com> 1432306973 +0200	checkout: moving from miniprogram to sort_states_rework
7e699e4d7de28e9067d9d70bb44f6ac28e2f6d0b 11b2ed6ca986f13aee0ec3d35ee8834fa4b9cc4b vurma <erik.kallman@gmail.com> 1432307077 +0200	checkout: moving from sort_states_rework to miniprogram
11b2ed6ca986f13aee0ec3d35ee8834fa4b9cc4b 9feb6cb399ea3fd9a8b3da15644c9a1eeed6c4aa vurma <erik.kallman@gmail.com> 1432568972 +0200	commit: vurma: now ready to debug the new parsed_input modifications
9feb6cb399ea3fd9a8b3da15644c9a1eeed6c4aa 3ef5291d4023f1533e9a38be6b5958a1600beb28 vurma <erik.kallman@gmail.com> 1432626517 +0200	commit: vurma:buffer transfer of data to PI debugged. moving on to fwdsplice debugging.
3ef5291d4023f1533e9a38be6b5958a1600beb28 c2328a2f3b0582241549910f1bdfa5e8b4bd6faf vurma <erik.kallman@gmail.com> 1432636847 +0200	commit: current implementation only working for state = 1. reverting in panic
c2328a2f3b0582241549910f1bdfa5e8b4bd6faf 3b4ee6d0b942533765cc12c9cfc279baff729443 vurma <erik.kallman@gmail.com> 1432732544 +0200	commit: soon ready for debugging
3b4ee6d0b942533765cc12c9cfc279baff729443 7e699e4d7de28e9067d9d70bb44f6ac28e2f6d0b vurma <erik.kallman@gmail.com> 1432732618 +0200	checkout: moving from miniprogram to sort_states_rework
7e699e4d7de28e9067d9d70bb44f6ac28e2f6d0b 3b4ee6d0b942533765cc12c9cfc279baff729443 vurma <erik.kallman@gmail.com> 1432732656 +0200	checkout: moving from sort_states_rework to miniprogram
3b4ee6d0b942533765cc12c9cfc279baff729443 114a425e4b7faccb452f1b5c23504f40f73834a2 vurma <erik.kallman@gmail.com> 1432735912 +0200	commit: vurma:almost done
114a425e4b7faccb452f1b5c23504f40f73834a2 7e699e4d7de28e9067d9d70bb44f6ac28e2f6d0b vurma <erik.kallman@gmail.com> 1432735933 +0200	checkout: moving from miniprogram to sort_states_rework
7e699e4d7de28e9067d9d70bb44f6ac28e2f6d0b 114a425e4b7faccb452f1b5c23504f40f73834a2 vurma <erik.kallman@gmail.com> 1432735951 +0200	checkout: moving from sort_states_rework to miniprogram
114a425e4b7faccb452f1b5c23504f40f73834a2 f441a217ac98d571a780b9592236453a15153d20 vurma <erik.kallman@gmail.com> 1432806137 +0200	commit: vurma: flipping the dipole transitions.
f441a217ac98d571a780b9592236453a15153d20 35256d95b1b28130abd70f91c2e6cbaf958353e8 vurma <erik.kallman@gmail.com> 1432816170 +0200	commit: vurma: debugging the current implementation
35256d95b1b28130abd70f91c2e6cbaf958353e8 7e699e4d7de28e9067d9d70bb44f6ac28e2f6d0b vurma <erik.kallman@gmail.com> 1432816221 +0200	checkout: moving from miniprogram to sort_states_rework
7e699e4d7de28e9067d9d70bb44f6ac28e2f6d0b 35256d95b1b28130abd70f91c2e6cbaf958353e8 vurma <erik.kallman@gmail.com> 1432816281 +0200	checkout: moving from sort_states_rework to miniprogram
35256d95b1b28130abd70f91c2e6cbaf958353e8 07020558c08b9e1621c843588c1722737d77ba98 vurma <erik.kallman@gmail.com> 1433244732 +0200	commit: vurma: making some changes to the log format to clarify the screening
07020558c08b9e1621c843588c1722737d77ba98 ee0fb1273150fc3d3b9a05ef6ced6c7015e2d2fd vurma <erik.kallman@gmail.com> 1433258722 +0200	commit: vurma: added some more information to the log file and automatic determination of the plotting ranges
